<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="44055" started-at="2020-01-10T12:47:20Z" finished-at="2020-01-10T12:48:04Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="44055" started-at="2020-01-10T12:47:20Z" finished-at="2020-01-10T12:48:04Z">
      <class name="testcases.LoginTestCase">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.LoginTestCase@13deb50e]" name="startReport" is-config="true" duration-ms="906" started-at="2020-01-10T18:17:20Z" finished-at="2020-01-10T18:17:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="LounchBrowser(java.lang.String, java.lang.String)[pri:0, instance:testcases.LoginTestCase@13deb50e]" name="LounchBrowser" is-config="true" duration-ms="29027" started-at="2020-01-10T18:17:21Z" finished-at="2020-01-10T18:17:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8080/aa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LounchBrowser -->
        <test-method status="FAIL" signature="tc01()[pri:0, instance:testcases.LoginTestCase@13deb50e]" name="tc01" duration-ms="10596" started-at="2020-01-10T18:17:50Z" description="Login Page Sucesfully" finished-at="2020-01-10T18:18:01Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at testcases.LoginTestCase.tc01(LoginTestCase.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.LoginTestCase@13deb50e]" name="getResult" is-config="true" duration-ms="0" started-at="2020-01-10T18:18:01Z" finished-at="2020-01-10T18:18:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc01 status=FAILURE method=LoginTestCase.tc01()[pri:0, instance:testcases.LoginTestCase@13deb50e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="CloseBrowser()[pri:0, instance:testcases.LoginTestCase@13deb50e]" name="CloseBrowser" is-config="true" duration-ms="3458" started-at="2020-01-10T18:18:01Z" finished-at="2020-01-10T18:18:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.LoginTestCase@13deb50e]" name="endReport" is-config="true" duration-ms="1011" started-at="2020-01-10T18:18:05Z" finished-at="2020-01-10T18:18:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.LoginTestCase -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
